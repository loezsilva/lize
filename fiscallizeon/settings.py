"""
Django settings for fiscallizeon project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import ssl

from decouple import config, Csv
from corsheaders.defaults import default_headers

from dj_database_url import parse as dburl
from django.contrib import messages

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default=[], cast=Csv())
CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS', default=[], cast=Csv())

CORS_ALLOWED_ORIGINS = config('CORS_ALLOWED_ORIGINS', default="https://app.lizeedu.com.br", cast=Csv())
CORS_ALLOW_ALL_ORIGINS = config('CORS_ALLOW_ALL_ORIGINS', default=False, cast=bool)
CORS_ALLOW_HEADERS = (
    *default_headers,
    'tokenauth',
)


DATA_UPLOAD_MAX_NUMBER_FIELDS=10000
DATA_UPLOAD_MAX_MEMORY_SIZE=1048576 * 5 # 5MB

BASE_URL = config('BASE_URL', default='https://app.lizeedu.com.br')
K8S_FISCALLIZE_SERVICE_URL=config('K8S_FISCALLIZE_SERVICE_URL', default='http://fiscallize-service')

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.postgres',

    'fiscallizeon.accounts',
    'fiscallizeon.api',
    'fiscallizeon.core',
    'fiscallizeon.applications',
    'fiscallizeon.students',
    'fiscallizeon.clients',
    'fiscallizeon.classes',
    'fiscallizeon.inspectors',
    'fiscallizeon.events',
    'fiscallizeon.answers',
    'fiscallizeon.questions',
    'fiscallizeon.subjects',
    'fiscallizeon.exams',
    'fiscallizeon.candidates',
    'fiscallizeon.bncc',
    'fiscallizeon.omr',
    'fiscallizeon.notifications',
    'fiscallizeon.help',
    'fiscallizeon.diagramations',
    'fiscallizeon.exports',
    'fiscallizeon.distribution',
    'fiscallizeon.materials',
    'fiscallizeon.integrations',
    'fiscallizeon.corrections',
    'fiscallizeon.mentorize',
    'fiscallizeon.parents',
    'fiscallizeon.omrnps',
    'fiscallizeon.weaviatedb',
    'fiscallizeon.ai',
    'fiscallizeon.onboarding',
    'fiscallizeon.dashboards',

    # Feature
    'fiscallizeon.analytics',
    'fiscallizeon.app',

    'tinymce',
    'anymail',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'widget_tweaks',
    'compressor',
    # 'pwa',
    'django_user_agents',
    'django_extensions',
    'django_filters',
    'captcha',
    'storages',
    'chartjs',
    'simple_history',
    'import_export',
    'django_celery_beat',
    'oauth2_provider',
    'social_django',
    'drf_social_oauth2',
    'drf_yasg',
    'hijack',
    'hijack.contrib.admin',
    'drf_spectacular',
    'dj_rest_auth',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'fiscallizeon.core.middlewares.LoggerMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'hijack.middleware.HijackUserMiddleware',
]

SECURE_REFERRER_POLICY='origin-when-cross-origin'

if DEBUG:
    DEBUG_TOOLBAR_PANELS = [
        # 'debug_toolbar.panels.history.HistoryPanel',
        # 'debug_toolbar.panels.versions.VersionsPanel',
        # 'debug_toolbar.panels.timer.TimerPanel',
        # 'debug_toolbar.panels.settings.SettingsPanel',
        # 'debug_toolbar.panels.headers.HeadersPanel',
        # 'debug_toolbar.panels.request.RequestPanel',
        # 'debug_toolbar.panels.sql.SQLPanel',
        # 'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        # 'debug_toolbar.panels.templates.TemplatesPanel',
        # 'debug_toolbar.panels.cache.CachePanel',
        # 'debug_toolbar.panels.signals.SignalsPanel',
        # 'debug_toolbar.panels.redirects.RedirectsPanel',
        # 'debug_toolbar.panels.profiling.ProfilingPanel',
    ]
    DEBUG_TOOLBAR_CONFIG = {
        # Toolbar options
        'RESULTS_CACHE_SIZE': 10,
        # Panel options
        'SQL_WARNING_THRESHOLD': 50,   # milliseconds
    }
    # INSTALLED_APPS += ['debug_toolbar']
    # MIDDLEWARE.insert(1, 'debug_toolbar.middleware.DebugToolbarMiddleware')

ROOT_URLCONF = 'fiscallizeon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'fiscallizeon.applications.context_processors.applications_actived',
                # 'fiscallizeon.notifications.context_processors.active_notifications',
                'fiscallizeon.help.context_processors.get_help_links',
                'fiscallizeon.help.context_processors.get_tutoriais',
                'fiscallizeon.core.context_processors.global_settings',
                'fiscallizeon.core.context_processors.sidebar_active',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

# Cache backend is optional, but recommended to speed up user agent parsing
CACHES = {
    "default": {        
        "BACKEND": config('CACHE_DEFAULT_BACKEND', default='django.core.cache.backends.locmem.LocMemCache'),
        "LOCATION": config('CACHE_DEFAULT_LOCATION', default='default'),
        "OPTIONS": {
            "REDIS_CLIENT_KWARGS": {
                "ssl": config("CELERY_REDIS_SSL_ENABLED", default=True, cast=bool)
            },
        }
    }
}

SESSION_ENGINE = config('SESSION_ENGINE', default='django.contrib.sessions.backends.db')
SESSION_CACHE_ALIAS = 'default'
COMPRESS_ENABLED=config("COMPRESS_ENABLED", default=False, cast=bool)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)


COMPRESS_JS_FILTERS = [
  'compressor.filters.jsmin.JSMinFilter',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'drf_social_oauth2.authentication.SocialAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
        'oauth2_provider.contrib.rest_framework.permissions.IsAuthenticatedOrTokenHasScope',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    # 'DEFAULT_RENDERER_CLASSES': (
    #     'djangorestframework_camel_case.render.CamelCaseJSONRenderer',
    #     'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer',
    # ),
    # 'DEFAULT_PARSER_CLASSES': (
    #     'djangorestframework_camel_case.parser.CamelCaseFormParser',
    #     'djangorestframework_camel_case.parser.CamelCaseMultiPartParser',
    #     'djangorestframework_camel_case.parser.CamelCaseJSONParser',
    # ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Lize API',
    'DESCRIPTION': 'Documentação da API de integração da plataforma Lize Remote.',
    'VERSION': '2.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # OTHER SETTINGS
    'PREPROCESSING_HOOKS': ['fiscallizeon.core.openapi.preprocessing_filter_spec'],
}

if not DEBUG:
    REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'] = (
        'rest_framework.renderers.JSONRenderer',
    )

OAUTH2_PROVIDER = {
    'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore',
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope'},
    'DEFAULT_SCOPES': ['read', 'write'],
}

WSGI_APPLICATION = 'fiscallizeon.wsgi.application'

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
default_dburl = 'sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3')
DATABASES = {
    'default': config('DATABASE_URL', default=default_dburl, cast=dburl),
    'readonly': config('DATABASE_URL_READONLY', default=default_dburl, cast=dburl),
    'readonly2': config('DATABASE_URL_READONLY2', default=default_dburl, cast=dburl),
    'readonly3': config('DATABASE_URL_READONLY3', default=default_dburl, cast=dburl),
}

DATABASES['default']['DISABLE_SERVER_SIDE_CURSORS'] = True
DATABASES['readonly']['DISABLE_SERVER_SIDE_CURSORS'] = True
DATABASES['readonly2']['DISABLE_SERVER_SIDE_CURSORS'] = True
DATABASES['readonly3']['DISABLE_SERVER_SIDE_CURSORS'] = True

DATABASES['readonly']['OPTIONS'] = {
    "connect_timeout": 10000,
}

DATABASES['readonly2']['OPTIONS'] = {
    "connect_timeout": 10000,
}

DATABASES['readonly3']['OPTIONS'] = {
    "connect_timeout": 10000,
}

DATABASE_ROUTERS = [
    'fiscallizeon.core.views.AuthDbRouter',
    'fiscallizeon.core.views.PrimaryReplicaRouter' 
]

DATABASE_ROUTER_READ_LIST = config('DATABASE_ROUTER_READ_LIST', default='default', cast=Csv())

DATABASES['default']['TEST'] = {
    'NAME': config('DATABASE_TEST_NAME', default=''),
}
DATABASES['readonly']['TEST'] = {
    'NAME': config('DATABASE_TEST_NAME', default=''),
}
DATABASES['readonly2']['TEST'] = {
    'NAME': config('DATABASE_TEST_NAME', default=''),
}
DATABASES['readonly3']['TEST'] = {
    'NAME': config('DATABASE_TEST_NAME', default=''),
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'fiscallizeon.core.password_validation.CustomCommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.User'
LOGIN_URL = 'accounts:login'
# LOGOUT_URL = 'accounts:logout'

LOGIN_REDIRECT_URL = 'core:redirect_dashboard'

LOGIN_URL = 'accounts:login'
LOGIN_REDIRECT_URL = 'core:redirect_dashboard'
LOGOUT_URL = 'accounts:logout'
LOGOUT_REDIRECT_URL = 'accounts:login'

AUTHENTICATION_BACKENDS = (
    'fiscallizeon.core.auth_backends.EmailOrUsernameModelBackend',
    'social_core.backends.google.GoogleOAuth2',
    'drf_social_oauth2.backends.DjangoOAuth2',
    # 'django.contrib.auth.backends.ModelBackend'
)

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}

RECAPTCHA_PRIVATE_KEY = config("RECAPTCHA_PRIVATE_KEY")
RECAPTCHA_PUBLIC_KEY = config("RECAPTCHA_PUBLIC_KEY")
RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0.5

RECAPTCHA_DOMAIN = '127.0.0.1'


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'pt-BR'
TIME_ZONE = 'America/Recife'
USE_I18N = True
USE_L10N = True
USE_TZ = True

USE_THOUSAND_SEPARATOR = True
THOUSAND_SEPARATOR = '.'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, "locale"),
)

ANYMAIL = {
    "MAILGUN_API_KEY": config('MAILGUN_API_KEY', default=''),
    "MAILGUN_SENDER_DOMAIN": config('MAILGUN_SENDER_DOMAIN', default='')
}

EMAIL_BACKEND = 'anymail.backends.mailgun.EmailBackend'
DEFAULT_FROM_EMAIL = 'contato@lizeedu.com.br'

#CELERY
CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='')
CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default='')
CELERY_REDIS_SSL_ENABLED=config("CELERY_REDIS_SSL_ENABLED", default=True, cast=bool)
CELERY_RESULT_EXPIRES = 7200
CELERY_ACKS_LATE=True
CELERY_TASK_REJECT_ON_WORKER_LOST=True
CELERY_TASK_TRACK_STARTED=True
CELERYD_PREFETCH_MULTIPLIER=1
CELERYD_MAX_TASKS_PER_CHILD=1
CELERY_IGNORE_RESULT=False
CELERY_SERIALIZER="json"
CELERY_RESULT_SERIALIZER="json"
CELERY_EVENT_SERIALIZER="json"
CELERY_COMPRESSION="gzip"
CELERY_QUEUE_PREFIX = config('CELERY_QUEUE_NAME_PREFIX', default='')

BROKER_TRANSPORT_OPTIONS = {
    'polling_interval': 15,
    'visibility_timeout': 3600,
    'wait_time_seconds': 30,
    'region': 'us-east-1'
}

QUEUE_NAMES = {
    'celery': f'{CELERY_QUEUE_PREFIX}celery',
    'omr-import': f'{CELERY_QUEUE_PREFIX}omr-import',
    'omr-export': f'{CELERY_QUEUE_PREFIX}omr-export',
}

CELERY_TASK_ROUTES = {
    #Export
    'fiscallizeon.applications.tasks.export_application_exams.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.applications.tasks.export_exam_application_student.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.distribute_students.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.export_application_students_bag.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.export_distribution_attendance_list.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.export_distribution_yard_list.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.export_exams_bag.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.export_room_attendance_list.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.export_unity_yard_list.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.group_application_students_files.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.distribution.tasks.remove_distribution_directory.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.exams.tasks.export_custom_page_application_student.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.exams.tasks.export_custom_page_school_classes.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.exams.tasks.export_exam_attachments.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omr.tasks.export_application_student_answer_sheet.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omr.tasks.export_application_student_discursive_sheet.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omr.tasks.export_school_class_attendance_list.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omrnps.tasks.export_application_files.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omrnps.tasks.export_application_class_sheet.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omr.tasks.elit.export_answer_sheets.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omr.tasks.export_answer_sheet.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omrnps.tasks.export.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omrnps.tasks.results.export_results.*': {'queue': QUEUE_NAMES['omr-export']},
    #Merge
    'fiscallizeon.distribution.tasks.group_files.*': {'queue': QUEUE_NAMES['omr-export']},
    'fiscallizeon.omr.tasks.group_answer_sheet_files.*': {'queue': QUEUE_NAMES['omr-export']},
    #Import
    'fiscallizeon.omr.tasks.discursive.crop_answer_area.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.discursive.handle_discursive_answers.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.eleva.create_omr_errors_eleva.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.eleva.crop_omr_area_eleva.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.eleva.proccess_sheets_eleva.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.finish_processing.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.fix_answers.reprocess_file_answers.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.handle_answers.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.handle_avulse_sheets.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.olimpiada_rio.create_omr_errors_rio.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.olimpiada_rio.crop_omr_area_rio.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.olimpiada_rio.proccess_sheets_rio.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.proccess_sheets.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.proccess_sheets.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.read_files_qr.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.read_sheets_directory_fiscallize.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.read_without_qr.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.remove_files.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.reprocessing.process_data_without_qr.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.reprocessing.reproccess_discursive_questions.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.correct_discursives.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.reprocessing.reproccess_sheets.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.reprocessing.reproccess_sheets.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.save_raw_omr.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.split_pdf.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.salta.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omr.tasks.offset_schoolclass.*': {'queue': QUEUE_NAMES['omr-import']},
    'fiscallizeon.omrnps.tasks.ingest.*': {'queue': QUEUE_NAMES['omr-import']},
    #Default
    'fiscallizeon.*': {'queue':  QUEUE_NAMES['celery']}
}


#ORCHESTRATOR
ORCHESTRATOR_BASE_URL = config("ORCHESTRATOR_BASE_URL")
ORCHESTRATOR_CLIENT_ID = config("ORCHESTRATOR_CLIENT_ID")
ORCHESTRATOR_CLIENT_SECRET = config("ORCHESTRATOR_CLIENT_SECRET")
ORCHESTRATOR_IS_DEVELOPMENT = config("ORCHESTRATOR_IS_DEVELOPMENT", default=False, cast=bool)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

AWS_S3_ENDPOINT_URL=config('SPACES_AWS_S3_ENDPOINT_URL', default='SPACES_AWS_S3_ENDPOINT_URL')
AWS_ACCESS_KEY_ID = config('SPACES_AWS_ACCESS_KEY_ID', default='SPACES_AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = config('SPACES_AWS_SECRET_ACCESS_KEY', default='SPACES_AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = config('SPACES_AWS_STORAGE_BUCKET_NAME', default='SPACES_AWS_STORAGE_BUCKET_NAME')
AWS_DEFAULT_ACL = None
AWS_REGION_NAME = 'nyc3'
AWS_S3_CUSTOM_DOMAIN = config('SPACES_AWS_S3_CUSTOM_DOMAIN', default='SPACES_AWS_S3_CUSTOM_DOMAIN')
AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
# s3 static settings
STATIC_LOCATION = 'static'

AWS_S3_SIGNATURE_VERSION = 's3v4'

if DEBUG:
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'fiscallizeon/core/static'),
    ]

    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

else:
    STATIC_S3_PATH = 'static'
    STATIC_ROOT = f'/{STATIC_S3_PATH}/'

    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
    STATICFILES_DIRS = [
        STATIC_URL,
    ]
    ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'
    STATICFILES_STORAGE = 'fiscallizeon.core.storage_backends.StaticStorage'
    # s3 public media settings
    PUBLIC_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'fiscallizeon.core.storage_backends.PublicMediaStorage'
    # s3 private media settings
    PRIVATE_MEDIA_LOCATION = 'private'
    PRIVATE_FILE_STORAGE = 'fiscallizeon.core.storage_backends.PrivateMediaStorage'


if not DEBUG:
    sentry_sdk.init(
        dsn=config('SENTRY_DSN', default="https://5f3c349fa4164e44baed61ef7489bf4f@o1209744.ingest.sentry.io/6345030"),
        integrations=[DjangoIntegration()],
        # send_default_pii=True,
        traces_sample_rate=0.01
    )

PWA_APP_NAME = 'Lize Remote'
PWA_APP_DESCRIPTION = "Fiscalização de provas remotamente"
PWA_APP_THEME_COLOR = '#0177de'
PWA_APP_BACKGROUND_COLOR = '#ffffff'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/conta/entrar'
PWA_APP_STATUS_BAR_COLOR = 'default'
PWA_APP_ICONS = [
    {
        'src': '/static/fiscallize-icon.png',
        'sizes': '200x200'
    }
]
PWA_APP_ICONS_APPLE = [
    {
        'src': '/static/fiscallize-icon.png',
        'sizes': '160x160'
    }
]
PWA_APP_SPLASH_SCREEN = [
    {
        'src': '/static/fiscallize-icon.png',
        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'pt-BR'

MIN_MINUTES_CREATE_BEFORE_START = config("MIN_MINUTES_CREATE_BEFORE_START", cast=int, default=20)

TINYMCE_JS_URL = "https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.3.0/tinymce.min.js"

TINYMCE_DEFAULT_CONFIG = {
    'toolbar': 'undo redo | bold italic underline strikethrough superscript subscript | fontsizeselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | charmap | image media | tiny_mce_wiris_formulaEditor | nonbreaking | preview | fullscreen | code | hr',
    'plugins': ['link  table charmap hr pagebreak nonbreaking anchor toc insertdatetime lists wordcount image imagetools textpattern noneditable help  charmap quickbars autoresize powerpaste code media searchreplace visualblocks code fullscreen hr' ],
    'nonbreaking_force_tab': True,
    'imagetools_proxy': '/painel/image-proxy/',
    'menubar': False,
    'statusbar': False,
    'toolbar_mode': 'wrap',
    'image_caption': True,
    'autoresize_bottom_margin': 0,
    'autoresize_on_init': True, 
    'schema': "html5",
    'max_height': 500,
    'min_height': 100,
    'cleanup_on_startup': True,
    'entity_encoding': 'raw',
    'automatic_uploads': False,    
    'language': 'pt_BR',
    'language_url': f'https://{AWS_S3_CUSTOM_DOMAIN}/static/tinymce/langs/pt.js',
    'external_plugins': {
        'powerpaste': f'https://{AWS_S3_CUSTOM_DOMAIN}/static/tinymce/langs/powerpaste.js',
        'tiny_mce_wiris': f'https://{AWS_S3_CUSTOM_DOMAIN}/static/js/wiris.min.js'        
    },
    'images_upload_url': '/painel/upload-image/',
    'paste_data_images': True,
    'automatic_uploads': True,
    'smart_paste': False,
    'powerpaste_allow_local_images': True,
    'powerpaste_html_import': 'clean',
    'powerpaste_word_import': 'clean',
    'powerpaste_googledocs_import': 'clean',
    'paste_merge_formats': True,
    'content_style': "body {font-size: 12pt;}",
    'fontsize_formats': "8pt 10pt 12pt 14pt 18pt",
    'indentation' : '40pt',
    'browser_spellcheck': True,
    'contextmenu':False,
    'force_br_newlines' : True,
    'force_p_newlines' : False,
    'newline_behavior': 'linebreak',
    'remove_trailing_brs': False
}

TINYMCE_DEFAULT_SIMPLE_CONFIG = {
    'quickbars_selection_toolbar': 'bold italic underline strikethrough | fontsizeselect | alignleft aligncenter alignright alignjustify | quicklink | forecolor backcolor ',
    'quickbars_image_toolbar': 'alignleft aligncenter alignright',
    'quickbars_insert_toolbar': 'quickimage media quicktable | hr pagebreak',
    'toolbar': 'undo redo | image table | superscript subscript | outdent indent | numlist bullist | tiny_mce_wiris_formulaEditor | removeformat | charmap | code | hr',
    'plugins': ['link table charmap hr pagebreak nonbreaking anchor toc insertdatetime lists wordcount image imagetools textpattern noneditable help charmap quickbars autoresize powerpaste code media searchreplace visualblocks code fullscreen tiny_mce_wiris hr'],
    'nonbreaking_force_tab': True,
    'imagetools_proxy': '/painel/image-proxy/',
    'menubar': False,
    'statusbar': False,
    'toolbar_mode': 'floating',
    'max_width': '100%',
    'toolbar_location': 'auto',
    'image_caption': True,
    'autoresize_bottom_margin': 0,
    'autoresize_overflow_padding': 0,
    'autoresize_on_init': True, 
    'schema': "html5",
    'max_height': 'autoresize',
    'min_height': 'autoresize',
    'cleanup_on_startup': True,
    'entity_encoding': 'raw', 
    'language': 'pt_BR',
    'language_url': f'https://{AWS_S3_CUSTOM_DOMAIN}/static/tinymce/langs/pt.js',
    'external_plugins': {
        'powerpaste': f'https://{AWS_S3_CUSTOM_DOMAIN}/static/tinymce/langs/powerpaste.js',
        'tiny_mce_wiris': f'https://{AWS_S3_CUSTOM_DOMAIN}/static/js/wiris.min.js'        
    },
    'images_upload_url': '/painel/upload-image/',
    'paste_data_images': True,
    'automatic_uploads': True,
    'smart_paste': False,
    'powerpaste_allow_local_images': True,
    'powerpaste_html_import': 'clean',
    'powerpaste_word_import': 'clean',
    'powerpaste_googledocs_import': 'clean',
    'paste_merge_formats': True,
    'fontsize_formats': "8pt 10pt 12pt 14pt 18pt",
    'indentation' : '40pt',
    'content_style': 'body { margin: 5px; }',
    'browser_spellcheck': True,
    'contextmenu':False,
    'force_br_newlines' : True,
    'force_p_newlines' : False,
    'newline_behavior': 'linebreak',
    'remove_trailing_brs': False
}

#ROLES
COORDINATION, STUDENT, INSPECTOR, TEACHER, PARENT, PARTNER = 'coordination', 'student', 'inspector', 'teacher', 'parent', 'partner'

# CSRF_FAILURE_VIEW = "fiscallizeon.core.views.redirect_dashboard"

#OMR
OMR_UPLOAD_DIR = 'tmp/'
OMR_COMPLETE_FILL = config('OMR_COMPLETE_FILL', default=False, cast=bool)
OMR_SIMULATE_ANSWERS = config('OMR_SIMULATE_ANSWERS', default=False, cast=bool)

# SIMPLE HISTORY
SIMPLE_HISTORY_HISTORY_ID_USE_UUID = True


TAWKTO_ID_SITE='610ae1f9d6e7610a49ae9e56'
TAWKTO_API_KEY='ff9f9d04bf11096052e8082fe6aacbcce28788dc'
TAWKTO_IS_SECURE = not DEBUG

SLEEKPLAN_PRIVATE_KEY=config("SLEEKPLAN_PRIVATE_KEY", cast=str, default="")


#LOGGING
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} [{asctime} - {remote_address}] {user} ({user_pk}): {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'remote': {
            'class': 'logging.handlers.SysLogHandler',
            'formatter': 'verbose',
            'facility': 'local7',
            'address': (
                config('SYSLOG_ADDRESS', default='localhost'),
                config('SYSLOG_PORT', default=514, cast=int)
            ),
        }
    },
    'loggers': {
        'fiscallizeon': {
            'handlers': ['console'] if DEBUG else ['remote'],
            'level': 'INFO',
        },
        'fiscallizeon.requests': {
            'handlers': ['console'] if DEBUG else ['remote'],
            'level': 'INFO',
            'propagate': False,
        }
    }
}

if config('ENABLE_SQL_LOGGING', default=False, cast=bool):
    LOGGING['handlers']['file'] = {
        'level': 'DEBUG',
        'class': 'logging.FileHandler',
        'filename': 'sql.log',
    }
    LOGGING['loggers']['django.db.backends'] = {
        'handlers': ['file'],
        'level': 'DEBUG',
        'propagate': True,
    }

#Printing service
PRINTING_SERVICE_BASE_URL = config('PRINTING_SERVICE_BASE_URL')
PRINTING_SERVICE_PATH = config('PRINTING_SERVICE_PATH', default='/print')
MERGING_SERVICE_PATH = config('MERGING_SERVICE_PATH', default='/merge')

#Local printing service
LOCAL_PRINTING_SERVICE_BASE_URL = config('LOCAL_PRINTING_SERVICE_BASE_URL', default='')

#PRESENTIAl
PRESENTIAL_BASE_URL = config('PRESENTIAL_BASE_URL', default='https://fiscallize.com.br')
PRESENTIAL_AUTHORIZATION_TOKEN = config('PRESENTIAL_AUTHORIZATION_TOKEN')

ONESIGNAL_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'fiscallizeon/core/static/js/onesignal/', 'OneSignalSDKWorker.js')

#ONESIGNAL
ONESIGNAL_URL=config('ONESIGNAL_URL')
ONESIGNAL_YOUR_REST_API_KEY=config('ONESIGNAL_YOUR_REST_API_KEY')
ONESIGNAL_APP_ID=config('ONESIGNAL_APP_ID')
ONESIGNAL_YOUR_USER_AUTH_KEY=config('ONESIGNAL_YOUR_USER_AUTH_KEY')

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY", "")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET", "")
SOCIAL_AUTH_REDIRECT_IS_HTTPS=True

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'fiscallizeon.core.utils.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'fiscallizeon.core.utils.user_details_after'
)

#GCP
GCP_PROJECT_ID = config('GCP_PROJECT_ID', default='')
GCP_PRIVATE_KEY_ID = config('GCP_PRIVATE_KEY_ID', default='')
GCP_PRIVATE_KEY = config('GCP_PRIVATE_KEY', default='')
GCP_CLIENT_EMAIL = config('GCP_CLIENT_EMAIL', default='')
GCP_CLIENT_ID = config('GCP_CLIENT_ID', default='')
GCP_AUTH_URI = config('GCP_AUTH_URI', default='')
GCP_TOKEN_URI = config('GCP_TOKEN_URI', default='')
GCP_AUTH_PROVIDER_X509_CERT_URL = config('GCP_AUTH_PROVIDER_X509_CERT_URL', default='')
GCP_CLIENT_X509_CERT_URL = config('GCP_CLIENT_X509_CERT_URL', default='')
GCP_API_KEY = config('GCP_API_KEY', default='')

GCP_STORAGE_BUCKET = config('GCP_STORAGE_BUCKET', default='')

#Analytics functions
ANALYTICS_SERVICE_URL = config('ANALYTICS_SERVICE_URL', default='')

#Discursive service
GCP_DISCURSIVE_CORRECTION_URL = config('GCP_DISCURSIVE_CORRECTION_URL', default='')

SUPER_PROFESSOR_URL = config('SUPER_PROFESSOR_URL', default='')
SUPER_PROFESSOR_CLIENT_ID = config('SUPER_PROFESSOR_CLIENT_ID', default='')
SUPER_PROFESSOR_SECRET = config('SUPER_PROFESSOR_SECRET', default='')
SUPER_PROFESSOR_URL_DOCX2HTML_SERVICE = config(
    'SUPER_PROFESSOR_URL_DOCX2HTML_SERVICE', default=''
)

OPENAI_API_KEY = config('OPENAI_API_KEY', default="OPENAI_API_KEY")

WEAVIATE_URL = config('WEAVIATE_URL', default='')

ADMIN_URL = config("ADMIN_URL", default="agoravai/")

#Randomizacao
TOTAL_RANDOMIZATION_VERSIONS = config('TOTAL_RANDOMIZATION_VERSIONS', default=5, cast=int)

FRONTEND_SHARED_DOMAIN = config('FRONTEND_SHARED_DOMAIN', default='.localhost')
FRONTEND_APP_SUBDOMAIN = config('FRONTEND_APP_SUBDOMAIN', default='http://localhost:3000')
CLIENT_ID_PRIVATE = config('CLIENT_ID_PRIVATE', default='')
CLIENT_SECRET_PRIVATE = config('CLIENT_SECRET_PRIVATE', default='')
