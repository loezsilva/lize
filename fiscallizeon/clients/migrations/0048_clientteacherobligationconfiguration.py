# Generated by Django 4.0.2 on 2022-08-04 18:15

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0047_remove_examprintconfig_print_alternatives_indicator_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientTeacherObligationConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('template', models.BooleanField(default=False, help_text='Ao marcar esta opção, o professor será obrigado a marcar pelo menos um gabarito', verbose_name='Gabarito')),
                ('topics', models.BooleanField(default=False, help_text='Ao marcar esta opção, o professor será obrigado escolher pelo menos um assunto abordado', verbose_name='Assuntos abordados')),
                ('bncc', models.BooleanField(default=False, help_text='Ao marcar esta opção, o professor será obrigado a marcar pelo menos uma BNCC', verbose_name='BNCCs')),
                ('difficult', models.BooleanField(default=False, help_text='Ao marcar esta opção, o professor será obrigado a escolher a dificuldade das questões', verbose_name='Dificuldade')),
                ('pedagogical_data', models.BooleanField(default=False, verbose_name='Dados pedagógicos')),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_configuration', to='clients.client', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Configuração de obrigatóriedade',
                'verbose_name_plural': 'Configurações de obrigatóriedade',
                'ordering': ['created_at'],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
