# Generated by Django 4.0.2 on 2022-07-30 04:23

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


def set_exam_print_config(apps, schema_editor):
    pass


def unset_exam_print_config(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0084_exam_show_ranking_historicalexam_show_ranking'),
        ('clients', '0044_client_use_only_own_subjects'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamPrintConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('name', models.CharField(default='Configuração base', max_length=255, verbose_name='nome')),
                ('header_format', models.PositiveSmallIntegerField(choices=[(0, 'Completo'), (1, 'Apenas o nome do aluno')], default=0, verbose_name='formato do cabeçalho')),
                ('column_type', models.PositiveSmallIntegerField(choices=[(0, 'Uma coluna'), (1, 'Duas colunas')], default=0, verbose_name='formato')),
                ('kind', models.PositiveSmallIntegerField(choices=[(0, 'Único'), (1, 'Por disciplina'), (2, 'Por tipo de questão')], default=0, verbose_name='tipo')),
                ('text_question_format', models.PositiveSmallIntegerField(choices=[(0, 'Espaço em branco'), (1, 'Linha')], default=0, verbose_name='estilo das questões discursivas')),
                ('line_height', models.PositiveSmallIntegerField(choices=[(0, 'Normal'), (1, 'Médio'), (2, 'Grande'), (3, 'Extra grande')], default=0, verbose_name='espaçamento entre as linhas')),
                ('font_size', models.PositiveSmallIntegerField(choices=[(0, '12pt'), (1, '14pt'), (2, '18pt'), (3, '22pt'), (4, '32pt')], default=0, verbose_name='tamanho da fonte')),
                ('print_subjects_name', models.BooleanField(default=False, help_text='Designa se o caderno deve imprimir o nome das disciplinas.', verbose_name='imprimir nome das disciplinas?')),
                ('print_with_correct_answers', models.BooleanField(default=False, help_text='Designa se o caderno deve ser impressa junto com o gabarito inserido.', verbose_name='imprimir caderno gabaritado?')),
                ('print_alternatives_indicator', models.BooleanField(default=True, help_text='Designa se o caderno deve imprimir o indicador das alternativas.', verbose_name='imprimir indicador das alternativas?')),
                ('print_knowledge_areas_name', models.BooleanField(default=True, help_text='Designa se o caderno deve imprimir o nome das áreas de conhecimento.', verbose_name='imprimir nome das áreas de conhecimento?')),
                ('print_black_and_white_images', models.BooleanField(default=False, help_text='Designa se o caderno deve imprimir as imagens em preto e branco.', verbose_name='imprimir imagens em preto e branco?')),
                ('hyphenate', models.BooleanField(default=False, help_text='Designa se deve hifenizar os textos do caderno.', verbose_name='hifenizar?')),
                ('is_default', models.BooleanField(default=False, help_text='Designa se a configuração deve ser usada como padrão nos cadernos.', verbose_name='é a configuração de impressão padrão?')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_print_configs', to='clients.client', verbose_name='cliente')),
                ('header', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exams.examheader', verbose_name='cabeçalho')),
            ],
            options={
                'verbose_name': 'configuração de impressão',
                'verbose_name_plural': 'configurações de impressão',
                'ordering': ('-created_at',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.RunPython(set_exam_print_config, unset_exam_print_config, atomic=True),
    ]
