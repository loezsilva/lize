# Generated by Django 4.0.6 on 2023-11-13 22:18

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0022_alter_grade_level'),
        ('inspectors', '0035_inspector_has_question_formatter'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NPSApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('day', models.DateField(verbose_name='Dia da aplicação')),
                ('export_count', models.PositiveSmallIntegerField(default=0, verbose_name='Número de exportações')),
                ('last_answer_sheet_generation', models.DateTimeField(blank=True, null=True, verbose_name='Data da última geração de malote')),
            ],
            options={
                'verbose_name': 'Aplicação de NPS',
                'verbose_name_plural': 'Aplicações de NPS',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NPSApplicationAxis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('order', models.SmallIntegerField(verbose_name='Ordem do eixo na aplicação')),
                ('nps_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omrnps.npsapplication', verbose_name='APlicação do NPS')),
            ],
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NPSAxis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('description', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Eixo de NPS',
                'verbose_name_plural': 'Eixos de NPS',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeacherOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('order', models.SmallIntegerField(verbose_name='Ordem do professor no gabarito')),
                ('class_application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='omrnps.classapplication', verbose_name='Applicação da turma')),
                ('teacher_subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inspectors.teachersubject', verbose_name='Professor')),
            ],
            options={
                'unique_together': {('teacher_subject', 'order', 'class_application')},
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeacherAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('grade', models.PositiveSmallIntegerField(verbose_name='Nota')),
                ('nps_application_axis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omrnps.npsapplicationaxis', verbose_name='Eixo avaliado')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omrnps.teacherorder', verbose_name='Professor')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='npsapplicationaxis',
            name='nps_axis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omrnps.npsaxis', verbose_name='Eixo'),
        ),
        migrations.AddField(
            model_name='npsapplication',
            name='nps_axis',
            field=models.ManyToManyField(through='omrnps.NPSApplicationAxis', to='omrnps.npsaxis', verbose_name='Eixo avaliado'),
        ),
        migrations.AddField(
            model_name='npsapplication',
            name='school_classes',
            field=models.ManyToManyField(through='omrnps.ClassApplication', to='classes.schoolclass', verbose_name='Turmas'),
        ),
        migrations.AddField(
            model_name='classapplication',
            name='nps_application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='omrnps.npsapplication', verbose_name='Aplicação de NPS'),
        ),
        migrations.AddField(
            model_name='classapplication',
            name='school_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='classes.schoolclass', verbose_name='Turma'),
        ),
        migrations.AlterUniqueTogether(
            name='npsapplicationaxis',
            unique_together={('nps_axis', 'nps_application', 'order')},
        ),
    ]
