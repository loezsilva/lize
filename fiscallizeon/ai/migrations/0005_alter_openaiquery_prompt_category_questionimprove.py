# Generated by Django 4.0.6 on 2024-01-17 17:22

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import tinymce.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0053_alter_sugestiontags_options'),
        ('bncc', '0016_remove_competenceexamperformance_competence_and_more'),
        ('subjects', '0021_alter_subjectrelation_subjects'),
        ('ai', '0004_openaiquery_prompt_category'),
    ]

    operations = [
        migrations.AlterField(
            model_name='openaiquery',
            name='prompt_category',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Geração de questão'), (2, 'Melhoramento de questão'), (3, 'Resolução de questão')], default=0, verbose_name='Categoria do prompt'),
        ),
        migrations.CreateModel(
            name='QuestionImprove',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('enunciation', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Enunciado')),
                ('alternatives', models.JSONField(blank=True, null=True, verbose_name='Alternativas')),
                ('enunciation_correction_detail', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Enunciado')),
                ('commented_answer', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Enunciado')),
                ('abilities', models.ManyToManyField(to='bncc.abiliity', verbose_name='Habilidades')),
                ('competences', models.ManyToManyField(to='bncc.competence', verbose_name='Competências')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='questions.question', verbose_name='Questão')),
                ('topics', models.ManyToManyField(to='subjects.topic', verbose_name='Tópicos')),
            ],
            options={
                'verbose_name': 'Aprimoramento de questão',
                'verbose_name_plural': 'Aprimoramento de questões',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
