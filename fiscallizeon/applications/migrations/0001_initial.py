# Generated by Django 3.0.7 on 2020-06-13 17:48

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        ('inspectors', '0001_initial'),
        ('classes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('date', models.DateField(verbose_name='Data da aplicação')),
                ('start', models.TimeField(verbose_name='Início previsto da aplicação')),
                ('end', models.TimeField(verbose_name='Fim previsto da aplicação')),
                ('min_time_finish', models.TimeField(verbose_name='Tempo mínimo para ir ao banheiro')),
                ('min_time_bathroom', models.TimeField(verbose_name='Tempo mínimo para finalizar prova')),
                ('subject', models.CharField(blank=True, help_text='Separe cada disciplina por virgula (,) ', max_length=150, null=True, verbose_name='Disciplinas')),
                ('orientations', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Orientações para aplicação')),
                ('inspectors', models.ManyToManyField(related_name='applications', to='inspectors.Inspector', verbose_name='Fiscais')),
                ('school_classes', models.ManyToManyField(blank=True, related_name='applications', to='classes.SchoolClass', verbose_name='Turmas')),
            ],
            options={
                'verbose_name': 'Aplicação',
                'verbose_name_plural': 'Aplicações',
                'ordering': ('-date', '-start'),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ApplicationStudent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('room_id', models.CharField(blank=True, help_text='Identificador único da sala no Janus', max_length=255, null=True, verbose_name='ID da Sala no Janus')),
                ('room_pin', models.CharField(blank=True, help_text='Código obrigatório para entrar na sala', max_length=255, null=True, verbose_name='PIN da Sala no Janus')),
                ('room_secret', models.CharField(blank=True, help_text='Código necessário para editar e excluir sala', max_length=255, null=True, verbose_name='Secret da sala no Janus')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application', verbose_name='Aplicação')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student', verbose_name='Aluno')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='application',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='applications', through='applications.ApplicationStudent', to='students.Student', verbose_name='Alunos'),
        ),
    ]
