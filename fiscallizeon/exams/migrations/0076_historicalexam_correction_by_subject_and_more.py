# Generated by Django 4.0.2 on 2022-04-11 14:40

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0031_merge_20220402_1159'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('exams', '0075_alter_exam_start_number_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='historicalexam',
            name='correction_by_subject',
            field=models.BooleanField(default=False, verbose_name='Permitir correção/visualização por professores da mesma disciplina'),
        ),
        migrations.AddField(
            model_name='historicalexam',
            name='elaboration_deadline',
            field=models.DateField(null=True, verbose_name='Prazo para elaboração'),
        ),
        migrations.AddField(
            model_name='historicalexam',
            name='group_by_topic',
            field=models.BooleanField(default=False, verbose_name='Randomizar disciplinas?'),
        ),
        migrations.AddField(
            model_name='historicalexam',
            name='name',
            field=models.CharField(default='Nome da prova add no histórico', max_length=255, verbose_name='Título do caderno'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalexam',
            name='random_alternatives',
            field=models.BooleanField(default=False, verbose_name='Randomizar alternativas?'),
        ),
        migrations.AddField(
            model_name='historicalexam',
            name='random_questions',
            field=models.BooleanField(default=False, verbose_name='Randomizar questões?'),
        ),
        migrations.AddField(
            model_name='historicalexam',
            name='source_exam',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exams.exam'),
        ),
        migrations.CreateModel(
            name='HistoricalExamQuestion',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('order', models.SmallIntegerField(default=0, verbose_name='Ordem na prova')),
                ('weight', models.DecimalField(decimal_places=6, default=Decimal('1'), max_digits=9, verbose_name='Nota da questão na prova')),
                ('is_abstract', models.BooleanField(default=False, verbose_name='O exame é abstrato, usada apenas na geração de gabarito avulso')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exam', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exams.exam', verbose_name='Prova')),
                ('exam_teacher_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exams.examteachersubject', verbose_name='Disciplina/Professor')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='questions.question', verbose_name='Questão')),
            ],
            options={
                'verbose_name': 'historical Questão na prova',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
