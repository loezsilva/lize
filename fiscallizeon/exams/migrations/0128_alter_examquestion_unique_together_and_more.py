# Generated by Django 4.0.6 on 2023-08-14 17:40

from django.db import migrations
from django.db.models import Count, OuterRef, Exists

def reordering(apps, schema_editor):
    Exam, ExamTeacherSubject, ExamQuestion = apps.get_model('exams', 'Exam'), apps.get_model('exams', 'ExamTeacherSubject'), apps.get_model('exams', 'ExamQuestion')
    exam_teacher_subjects_repeteds = Exam.objects.using('default').annotate(
        teachers_count=Count('teacher_subjects'),
        is_duplicated=Exists(
            ExamTeacherSubject.objects.using('default').filter(exam__pk=OuterRef('pk')).values('order').annotate(
                total=Count('order'),
            ).filter(total__gt=1)
        )
    ).filter(is_duplicated=True)

    for exam in exam_teacher_subjects_repeteds:
        for order, exam_teacher_subject in enumerate(exam.examteachersubject_set.all().order_by('order')):
            exam_teacher_subject.order = order
            exam_teacher_subject.save()

    exam_question_repeteds = ExamTeacherSubject.objects.using('default').annotate(
        exam_question_count=Count('examquestion'),
        is_duplicated=Exists(
            ExamQuestion.objects.using('default').filter(exam_teacher_subject__pk=OuterRef('pk')).values('order').annotate(
                total=Count('order'),
            ).filter(total__gt=1)
        )
    ).filter(is_duplicated=True)

    for exam_teacher_subject in exam_question_repeteds:
        for order, exam_question in enumerate(exam_teacher_subject.examquestion_set.all().order_by('order')):
            exam_question.order = order
            exam_question.save()

class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0047_questionhistorytags_note'),
        ('inspectors', '0035_inspector_has_question_formatter'),
        ('exams', '0127_merge_20230711_1658'),
    ]

    operations = [
        migrations.RunPython(reordering, migrations.RunPython.noop),
        migrations.AlterUniqueTogether(
            name='examquestion',
            unique_together={('exam', 'exam_teacher_subject', 'order'), ('question', 'exam', 'exam_teacher_subject')},
        ),
        migrations.AlterUniqueTogether(
            name='examteachersubject',
            unique_together={('exam', 'order', 'teacher_subject')},
        ),
    ]
